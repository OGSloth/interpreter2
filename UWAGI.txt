0. shift/reduce conflicts:  22
-- Zredukowałem liczbę konfliktów do zera
-- Aby to uzyskać if/else działa wyłącznie na blokach
-- Jest to rozwiązanie sugerowane przez wiele parserów języków programowania


1. break poza pętlą kończy się komunikatem: "Main return value does not match"
--Komunikat o zakończeniu maina po przez "break" uzupełniony

2. Brak numerów linii, kontekstu błędu
--Uzupełniłem kontekst błędu względem wystąwienia (Nazwa zmiennej lub miejsca, nie numeru lini)

3. for
a) czy nie trzeba zmiennej sterującej deklarować wcześniej ? zawsze
bedzie typu int ?
-- Częściowo omówione podczas prezentacji - Zawsze typ int, przysłaniający wartość

b) nie można zrobic tego co poniżej ? i w for powinno byc lokalne....
-- Uzupełnione - Przysłanianie w pętli for działa popraniwe
-- Uzyskane poprzez przekazywanie środkowiska, lecz nie stanu
-- Potencjalne deklaracje są sprawdzane przed wykonaniem bloku
-- Blok upewnia się co do braku ponownej deklaracji zmiennych
-- Deklaracje w For/While/If interpretujących pojedyńczy Statement uniemużliwiają deklarację
-- (Języki per se umożliwiają to, lecz wszelkie lintery definitywnie zniechęcają)

int main()
{
    int z = 2;
    int i = 3;
    for(i = 0 to 10) {
        z = z * 2;
        print(i);
    }
    print(i);
    print(z);
    return 0;
}

4. Nie działa przesłanianie ?
-- Przysłanianie uzupełnione - Komentarz wyżej

int main()
{
    int i=2;
    print(i);
       {int i=222;
    i=i+2;
    print(i);
    }
    print(i);
    return 0;
}




5.
    int w =1, e;
    print(e);

Komunikat: "This is not printable"
-- Komunikat uzupełniony (Wartość nie zadeklarowana) - Wraz z nazwą zmiennej

6. nestedFuns.ml i evenMoreNested.ml - to wzajemna rekurencja, a nie
funkcje zagnieżdżone
-- Nested -> Recursive
-- Nowe testy pod tą samą nazwą

7. przykład passArr.ml - tam prawie nic nie ma......
-- Przykład uzupełniony wraz z przekazywaniem tablicy

8. Brak sprawdzania statycznego ?
-- Omówione podczas prezentacji - Wykonywanie bloku jest zakończone po napotkaniu pierwszego wystąpienia "return"

int someFunc(int x) {
    x = x * 4;
    return x;
    return "ala";
}


9. Wypisywanie
print("Time two\n");
-- Komunikaty są wypisywane poprawne, nie jako haskellowe stringi

10. tablice - brak przykładów na zwracanie tablic w wyniku,
przekazywanie jako parametr


-----------------------------
Nie będzie TypeCheckera
-- Brak zmian

StorableVoid - wartość zwracana przez return
-- Brak zmian - Działa poprawnie

funkcje są wzajemnie rekurencyjne - nie powinno być nadpisywania funkcji
-- Brak zmian - Nadpisywanie uniemożliwione poprzez sprawdzanie repetywności nazw

- sprawdzanie return/break/continue w while i propagacja tej informacji
-- Poprawione, następuje propagacja informacji

- tablica powinna znać swój wymiar i typ wartości
-- Brak zmian (Implementacja nie jest zupełnie poprawna, lecz działa poprawnie bez większych obciążeń)

- parametry nie mogą być typu void, nazwy parametrów nie powinny się powtarzać
-- Poprawione, na poziomie deklaracji sprawdzane są typy oraz powtórzenia

